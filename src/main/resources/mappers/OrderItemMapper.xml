<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.dao.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.shop.pojo.OrderItem">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="goods_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="main_image" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="detail" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="total_price" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="refund_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, order_id, goods_id, order_no, quantity, name, main_image, status, detail, 
    price, total_price, refund_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.pojo.OrderItem">
    insert into order_item (id, user_id, order_id, 
      goods_id, order_no, quantity, 
      name, main_image, status, 
      detail, price, total_price, 
      refund_time, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{quantity,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{mainImage,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{detail,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, 
      #{refundTime,jdbcType=TIMESTAMP}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shop.pojo.OrderItem">
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="mainImage != null">
        main_image,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mainImage != null">
        #{mainImage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.pojo.OrderItem">
    update order_item
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mainImage != null">
        main_image = #{mainImage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.pojo.OrderItem">
    update order_item
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=BIGINT},
      quantity = #{quantity,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      main_image = #{mainImage,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="batchInsert" parameterType="list">
  	insert into order_item (id, user_id, order_id, 
      goods_id, order_no, quantity, 
      name, main_image, status, detail, 
      price, total_price, refund_time, create_time, 
      update_time)
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    	(
    		#{item.id}, #{item.userId}, #{item.orderId}, #{item.goodsId}, #{item.orderNo}, #{item.quantity}, 
      		#{item.name}, #{item.mainImage}, #{item.status}, #{item.detail}, #{item.price}, #{item.totalPrice}, #{item.refundTime}, now(), now()
    	)
    </foreach>
  </insert>
  <select id="selectQuantityByOrderNo" resultType="com.shop.pojo.OrderItem" parameterType="long">
  	select id, goods_id as goodsId, quantity
  	from order_item
  	where order_no = #{orderNo}
  </select>
  <select id="selectByOrderNo" resultMap="BaseResultMap" parameterType="long">
  	select <include refid="Base_Column_List"></include>
  	from order_item
  	where order_no = #{orderNo}
  </select>
  <select id="batchSelectByOrderList" resultMap="BaseResultMap" parameterType="map">
  	select <include refid="Base_Column_List" />
  	from order_item
  	where order_no in
  	<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
  		#{item.orderNo}
  	</foreach>
  </select>
</mapper>